/*
 Teste com BFS simples
*/
var int[100][100] adjList;
var bool[100]visited := [i | false];

procedure pop(var int queue[], var int siz)
{
	var int i := 0;
	while(i < siz - 1)
	{
		queue[i] := queue[i+1];
		i := i + 1;
	}
	queue[siz-1] := -1;
	siz := siz - 1;
}

procedure push(int val, var int queue[], var int siz)
{
	queue[siz] := val;
	siz := siz + 1;
}

procedure bfs(int ini) 
{
	var int q[10000], siz := 0;
	visited[ini] := true;
	push(ini, q, siz);
	while(1 < siz)
	{
		var int u := q[0];
		pop(q, siz);
		
		var int j := 1;
		while(j < adjList[0]) // A quant de adj de cada vertice esta na primeira posi
		{
			var int v = adjList[u][j];
			if (!visited[v])
			{
				visited[v] := true;
				push(v, q, siz);
			}
			j := j + 1;
		}
	}
}

procedure main()
{
	// inicializando grafo com 4 vertices 0,1,2,3
	adjList[0][0] = 1;
	adjList[0][1] = 1;
	
	adjList[1][0] = 3;
	adjList[1][1] = 0;
	adjList[1][2] = 2;
	adjList[1][3] = 3;
	
	adjList[2][0] = 1;
	adjList[2][1] = 1;
	
	adjList[3][0] = 1;
	adjList[3][1] = 1;
	
	// bfs iniciando do no 0
	bfs(0);
	
}
